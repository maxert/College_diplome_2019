{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Max\\\\my-projekt-college\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Max\\\\my-projekt-college\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Max\\\\my-projekt-college\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Max\\\\my-projekt-college\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Max\\\\my-projekt-college\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Max\\\\my-projekt-college\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Header from './header';\nimport 'bootstrap';\nimport 'bootstrap/js/dist/util';\nimport 'bootstrap/js/dist/dropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from './footer';\nimport Start from './start_container';\nimport LOAD from 'react-svg';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // the setTimeout just simulates an async action, after which the component will render the content\n      setTimeout(function () {\n        return _this2.setState({\n          loading: false\n        });\n      }, 1500);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var loading = this.state.loading;\n\n      if (loading) {\n        // if your component doesn't have to wait for an async action, remove this block\n        return null; // render null when app is not ready\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"I'm the app\");\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(\"div\", {\n  className: \"wrapper\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(Header, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), React.createElement(Start, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), React.createElement(Footer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), React.createElement(LOAD, {\n  src: \"../img/load.svg\",\n  loading: function loading() {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Loading\");\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n})), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\Users\\Max\\my-projekt-college\\src\\index.js"],"names":["React","ReactDOM","serviceWorker","Header","Footer","Start","LOAD","App","state","loading","setTimeout","setState","Component","render","document","getElementById","unregister"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,iBAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;AACA,OAAO,wBAAP;AACA,OAAO,4BAAP;AACA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IACMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;;;;;;wCAIY;AAAA;;AAClB;AACAC,MAAAA,UAAU,CAAC;AAAA,eAAM,MAAI,CAACC,QAAL,CAAc;AAAEF,UAAAA,OAAO,EAAE;AAAX,SAAd,CAAN;AAAA,OAAD,EAA0C,IAA1C,CAAV;AACD;;;6BAEQ;AAAA,UACCA,OADD,GACa,KAAKD,KADlB,CACCC,OADD;;AAGP,UAAIA,OAAJ,EAAa;AACX;AACA,eAAO,IAAP,CAFW,CAEE;AACd;;AAED,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;;;EAnBeT,KAAK,CAACY,S;;AAsBxBX,QAAQ,CAACY,MAAT,CACE;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAIE,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAC,iBAAV;AAA4B,EAAA,OAAO,EAAE;AAAA,WAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAN;AAAA,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,CADF,EAOEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF;AASAb,aAAa,CAACc,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Header from './header';\nimport 'bootstrap';\nimport 'bootstrap/js/dist/util';\nimport 'bootstrap/js/dist/dropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from './footer';\nimport Start from './start_container';\nimport LOAD from 'react-svg';\nclass App extends React.Component {\n  state = {\n    loading: true,\n  };\n\n  componentDidMount() {\n    // the setTimeout just simulates an async action, after which the component will render the content\n    setTimeout(() => this.setState({ loading: false }), 1500);\n  }\n\n  render() {\n    const { loading } = this.state;\n\n    if (loading) {\n      // if your component doesn't have to wait for an async action, remove this block\n      return null; // render null when app is not ready\n    }\n\n    return <div>I'm the app</div>;\n  }\n}\n\nReactDOM.render(\n  <div className=\"wrapper\">\n    <Header />\n    <Start />\n    <Footer />\n    <LOAD src=\"../img/load.svg\" loading={() => <span>Loading</span>} />\n  </div>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}