import cloneSvg from './clone-svg.js';
import svgCache from './svg-cache.js';
var requestQueue = [];
export var queueRequest = function queueRequest(url, callback) {
  requestQueue[url] = requestQueue[url] || [];
  requestQueue[url].push(callback);
};
export var processRequestQueue = function processRequestQueue(url, error) {
  for (var i = 0, len = requestQueue[url].length; i < len; i++) {
    // Make these calls async so we avoid blocking the page/renderer
    ;

    (function (index) {
      setTimeout(function () {
        var cb = requestQueue[url][index];

        if (svgCache[url] instanceof SVGSVGElement) {
          cb(null, cloneSvg(svgCache[url]));
          return;
        }

        if (svgCache[url] instanceof Error) {
          cb(svgCache[url]);
          return;
        } // Not sure how we'd get here, but if so, we're processing with a
        // freshly seeded cached (`{}`)... :-/

      }, 0);
    })(i);
  }
};